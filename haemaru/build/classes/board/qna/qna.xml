<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="qna">
    
    <typeAlias alias="qnavo" type="board.qna.QnaVO"/>
    
    <!-- 공통조건 -->
	<sql id="searchSql">		
		<!-- WHERE 절 검색 -->
		<dynamic prepend="where">
			<isNotEqual property="category" compareValue="0">
			    category = #category#
			</isNotEqual>
			<!-- 검색어 검색 -->
			<isNotEqual property="sval" compareValue="">
				<!-- 검색 타입이 all일 때 -->
				<isEqual property="stype" compareValue="0" prepend="and">
					( (contents like '%$sval$%' ) or (title like '%$sval$%' )  ) 					
				</isEqual>
				<!-- 검색 타입이 all이 아닐때 해당 stype으로 검색 -->
				<isNotEqual property="stype" compareValue="0" prepend="and">
					($stype$ like '%$sval$%' )
				</isNotEqual>
			</isNotEqual>
		</dynamic>
	</sql>
	
	<!-- 해당 테이블의 총 게시글 수 -->
	<select id="count" parameterClass="qnavo" resultClass="Integer">
        select count(*) from qna
        <include refid="searchSql" />	
    </select>
    
	<select id="list" parameterClass="qnavo" resultClass="qnavo">
        select *,
       		IFNULL((SELECT name FROM member WHERE no=qna.member_pk), "해마루동물병원") AS member_name
		FROM qna
        <include refid="searchSql" />
		ORDER BY gno DESC, ono ASC LIMIT $startPageNo$, $pageRows$
    </select>
	
	<!-- 해당 테이블에 게시글 작성 -->
    <insert id="insert" parameterClass="qnavo">
        INSERT INTO qna (
        	gno, ono, nested, category, title, contents, member_pk, emailid, emailac, registdate
        ) VALUES (
        	#gno#, #ono#, #nested#, #category#, #title#, #contents#, #member_pk#, #emailid#, #emailac#, now())
        <selectKey keyProperty="no" resultClass="Integer">
        	SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    
     <!-- 등록시 최대 gno + 1 -->
    <select id="getMaxGno" parameterClass="qnavo" resultClass="Integer">
    	SELECT ifnull(max(gno),0)+1 FROM qna
    </select>
    
    <!-- 답변달때 같은 그룹 내에 최대ono -->
    <select id="getMaxOno" parameterClass="qnavo" resultClass="Integer">
    	SELECT max(ono) FROM qna where gno=#gno#
    </select>
    
    <!-- 답변달때 같은 그룹 내에 원글 ono보다 크고(&) 원글 nested보다 작거나 같은 최소ono -->
    <select id="getMinOno" parameterClass="qnavo" resultClass="Integer">
    	<![CDATA[
    	SELECT ifnull(min(ono),0) FROM qna where gno=#gno# and ono > #ono# and nested <= #nested# 
    	]]>
    </select>
    
    <!-- 이미 답변이 존재할때 (minOno > 0)같은 그룹 내 ono >= minOno ono+1  -->
    <update id="updateOno" parameterClass="java.util.HashMap">
    <![CDATA[
    UPDATE qna SET ono=ono+1 where gno=#gno# AND ono >= #minono#
    ]]>
    </update>
    
    
    <update id="update" parameterClass="qnavo">
        UPDATE qna SET
        	category=#category#, title=#title#, contents=#contents#
        WHERE no = #no#
    </update>
     
    <select id="read" parameterClass="qnavo" resultClass="qnavo">
        SELECT *,
        IFNULL((SELECT name FROM member WHERE no=qna.member_pk), "비회원") AS member_name,
        IFNULL((SELECT email1 FROM member WHERE no=qna.member_pk), 0) AS emailid,
        IFNULL((SELECT email2 FROM member WHERE no=qna.member_pk), 0) AS emailac
        FROM qna
        where no = #no#
    </select>
    
    <select id="filenames" parameterClass="qnavo" resultClass="qnavo">
    	<![CDATA[
        SELECT 
        	file_name
        FROM qna
        where no = #no#
        ]]>
    </select> 
        
    <select id="getRowNum" parameterClass="qnavo" resultClass="Integer">
        select rownum from (
        	select @rownum:=@rownum+1 as rownum, no, title from qna, (select @rownum:=0) as r
        	<include refid="searchSql" />
        	ORDER BY registdate DESC
        ) as r2
        where r2.no = #no#
    </select>
    
    <select id="getNextRowNum" parameterClass="qnavo" resultClass="qnavo">
        select ifnull(rownum,0), ifnull(no,0) as next_no, title as next_title
        from (
        	select @rownum:=@rownum+1 as rownum, no, title from qna, (select @rownum:=0) as r
        	<include refid="searchSql" />
        	ORDER BY registdate DESC
        ) as r2
        <![CDATA[
        where r2.rownum = $rownum$+1
    	]]>
    </select>
    
    <select id="getPrevRowNum" parameterClass="qnavo" resultClass="qnavo">
    	select ifnull(rownum,0), ifnull(no,0) as prev_no, title as prev_title
        from (
        	select @rownum:=@rownum+1 as rownum, no, title from qna, (select @rownum:=0) as r
        	<include refid="searchSql" />
        	ORDER BY registdate DESC
        ) as r2
        <![CDATA[
        where r2.rownum = $rownum$-1
    	]]>
    </select>
    
    <delete id="delete" parameterClass="qnavo">
        DELETE FROM qna WHERE no=#no#
    </delete>
   
    
    <select id="mainList" parameterClass="qnavo" resultClass="qnavo">
        select *
        from qna
        <include refid="searchSql" />
		ORDER BY registdate DESC LIMIT 0, $number$
    </select>
        
  
</sqlMap>